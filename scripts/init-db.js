const { Pool } = require('pg');
require('dotenv').config({ path: '.env.local' });

const pool = new Pool({
  connectionString: process.env.DATABASE_URL || 'postgresql://postgres:password@localhost:5432/tvcompany_db',
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false,
});

async function initDatabase() {
  try {
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const client = await pool.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ!');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —à–æ—É
    console.log('üì∫ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —à–æ—É...');
    await client.query(`
      INSERT INTO shows (name, time_slot, base_price_per_min) VALUES
      ('–£—Ç—Ä–µ–Ω–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏', '08:00-09:00', 5000),
      ('–î–Ω–µ–≤–Ω–æ–π —ç—Ñ–∏—Ä', '12:00-13:00', 8000),
      ('–í–µ—á–µ—Ä–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏', '19:00-20:00', 12000),
      ('–ù–æ—á–Ω–æ–π —ç—Ñ–∏—Ä', '23:00-00:00', 3000)
      ON CONFLICT DO NOTHING;
    `);
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    console.log('üìÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...');
    const shows = await client.query('SELECT id FROM shows LIMIT 4');
    
    for (let i = 0; i < shows.rows.length; i++) {
      const showId = shows.rows[i].id;
      const date = new Date();
      date.setDate(date.getDate() + i);
      
      await client.query(`
        INSERT INTO show_schedule (show_id, scheduled_date, duration_minutes, ad_minutes, available_slots) VALUES
        ($1, $2, 60, 10, 8)
        ON CONFLICT (show_id, scheduled_date) DO NOTHING;
      `, [showId, date.toISOString().split('T')[0]]);
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    await client.query(`
      INSERT INTO users (name, email, role, is_active) VALUES
      ('Demo Customer', 'customer@demo.com', 'customer', true),
      ('Demo Agent', 'agent@demo.com', 'agent', true),
      ('Demo Commercial', 'commercial@demo.com', 'commercial', true)
      ON CONFLICT (email) DO NOTHING;
    `);
    
    client.release();
    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
    console.log('\nüìã –°–æ–∑–¥–∞–Ω–æ:');
    console.log('- 4 —Ç–µ—Å—Ç–æ–≤—ã—Ö —à–æ—É');
    console.log('- 4 —ç–ª–µ–º–µ–Ω—Ç–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è');
    console.log('- 3 —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î:', error.message);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

initDatabase();
