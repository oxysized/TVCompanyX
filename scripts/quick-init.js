const { Pool } = require('pg');
require('dotenv').config({ path: '.env.local' });

const pool = new Pool({
  connectionString: process.env.DATABASE_URL || 'postgresql://postgres:0112@localhost:5432/TVShow',
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false,
});

async function quickInit() {
  try {
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î TVShow...');
    const client = await pool.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —à–æ—É
    console.log('üì∫ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —à–æ—É...');
    await client.query(`
      INSERT INTO shows (name, time_slot, base_price_per_min) VALUES
      ('–£—Ç—Ä–µ–Ω–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏', '08:00-09:00', 5000),
      ('–î–Ω–µ–≤–Ω–æ–π —ç—Ñ–∏—Ä', '12:00-13:00', 8000),
      ('–í–µ—á–µ—Ä–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏', '19:00-20:00', 12000),
      ('–ù–æ—á–Ω–æ–π —ç—Ñ–∏—Ä', '23:00-00:00', 3000)
      ON CONFLICT DO NOTHING;
    `);

    // –ü–æ–ª—É—á–∞–µ–º ID —à–æ—É
    const shows = await client.query('SELECT id FROM shows ORDER BY name');
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${shows.rows.length} —à–æ—É`);

    // –°–æ–∑–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 7 –¥–Ω–µ–π
    console.log('üìÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...');
    const today = new Date();
    
    for (let i = 0; i < 7; i++) {
      const date = new Date(today);
      date.setDate(today.getDate() + i);
      const dateStr = date.toISOString().split('T')[0];
      
      for (const show of shows.rows) {
        await client.query(`
          INSERT INTO show_schedule (show_id, scheduled_date, duration_minutes, ad_minutes, available_slots) 
          VALUES ($1, $2, 60, 10, 8)
          ON CONFLICT (show_id, scheduled_date) DO NOTHING;
        `, [show.id, dateStr]);
      }
    }
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 7 –¥–Ω–µ–π');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    await client.query(`
      INSERT INTO users (id, name, email, role, is_active) VALUES
      ('550e8400-e29b-41d4-a716-446655440000', 'Demo Customer', 'customer@demo.com', 'customer', true)
      ON CONFLICT (id) DO NOTHING;
    `);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');

    client.release();
    console.log('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('\nüìã –ß—Ç–æ —Å–æ–∑–¥–∞–Ω–æ:');
    console.log('- 4 —Ç–µ—Å—Ç–æ–≤—ã—Ö —à–æ—É');
    console.log('- –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 7 –¥–Ω–µ–π');
    console.log('- –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (customer@demo.com)');
    console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∞—á—É –∑–∞—è–≤–æ–∫!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error.message);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

quickInit();
